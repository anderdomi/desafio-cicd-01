name: Execução de testes
on:
    workflow_call:

jobs:
    unit-test:
        name: Teste de unidade
        runs-on: ubuntu-latest
        steps:
            - name: Obtendo o código do projeto 
              uses: actions/checkout@v4
            - name: setup do projeto
              uses: actions/setup-dotnet@v4
              with: 
                dotnet-version: "8.0.300"
            - name: Execução de teste de Unidade
              working-directory: ./src
              run: dotnet test ./Review-Filmes.Test.Unit/Review-Filmes.Test.Unit.csproj

    integration-test: 
        name: Teste de integração
        runs-on: ubuntu-lates
        services:
            postgre:
                image: postgres-latest
                ports:
                    - 5432:5432
                env:
                    POSTGRES_USER: revies
                    POSTGRES_PASSWORD: postgrespwd
                    POSTGRES_DB: review-filmes
        steps:
            - name: Obtendo o código do projeto 
              uses: actions/checkout@v4
            - name: setup do projeto
              uses: actions/setup-dotnet@v4
              with: 
                dotnet-version: "8.0.300"
            - name: Execução de teste de Unidade
              working-directory: ./src
              run: dotnet test ./Review-Filmes.Test.Integration/Review-Filmes.Test.Integration.csproj
              env:
                  ConnectionStrings_DefaultConnection: "Host=localhost;Port=5432;Database=review-filmes;Username=review;Password=postgres"

    sonarqube:
      name: Scan com sonarqube
      runs-on: ubuntu-latest
      steps:
          - name: Obtendo o código do projeto 
            uses: actions/checkout@v4
          
          - name: Setup JDK
            uses: actions/setup-java@v4
            with:
              distribution: adopt
              java-version: '21'
          
          - name: setup do projeto
            uses: actions/setup-dotnet@v4
            with: 
              dotnet-version: "8.0.300"                       
          
          - name: Instalação dop Sonarqube scanner
            run: dotnet tool install --global dotnet-sonarscanner         
          
          - name: Build e analise
            working-directory: ./src
            run: |
              dotnet sonarscanner begin /k:"DevopsPro2" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
              donet build Review-Filmes.sln
              dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
              
          - name: Verificação do Quality Gate
            uses: sonarsource/sonarqube-quality-gate-action@master
            id: sonarqube-quality-gate-ckeck
            env:
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
            with:
              scanMetadataReportFile: ./src/.sonarqube/.sonar/report-task.txt
          
          - name: "exibir quality gate status"
            if: ${{ always() }}
            run: echo "O status do quality gate é ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"


          

              