name: Pipeline CI/CD
#Nome de execução da pipeline
run-name: Pipeline CI/CD executada por ${{ github.actor }} em ${{ github.run_number }}

#Disparando a exec usando ON.
on:
#Executando manualmente precisa usar o workflow_dispatch
  workflow_dispatch:
#Colando o evento que vai disparar o workflow
  push:
    branches:
      - main
        
#Especifique os conjuntos de instruções, jobs
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest #agente de execução em ambiente
    steps: #passos executados #declarando o ambiente
      - name: Obtendo o código do projeto 
        uses: actions/checkout@v4
      - name: setup do projeto
        uses: actions/setup-dotnet@v4
        with: 
          dotnet-version: "8.0.300"
      - name: Executando o comando build
        working-directory: ./src
        run: dotnet build Review-Filmes.sln
  
        #reaproveitendo workflow
  testes:
    needs: [build]
    uses: anderdomi/desafio-cicd-01/.github/workflows/testes.yml@main
    secrets: inherit

  release:
    name: Criação de release
    runs-on: ubuntu-latest
    needs: [testes] 
    steps:
        - name: Obtendo o código do projeto 
          uses: actions/checkout@v4
        - name: Análise do Dockerfile usando hadolint
          uses: hadolint/hadolint-action@3.1.0
          with:
            dockerfile: .src/Review-Filmes.Web/Dockerfile
        - name: Logando no docker hub
          uses: docker/logins-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USER }}
            password: ${{ secrets.DOCKERHUB_PWD }}
        - name: Build e Push da imagem
          uses: docker/build-push-action@v6
          with:
            push: true
            context: ./src
            file: ./Review-Filmes.Web/Dockerfile
            tags:
              anderdomi/projetogithaction-pro:latest
              anderdomi/projetogithaction-pro:v${{ github.run_number }}

  #Inserindo testes de qualidade teste
  #Verificando qualidade da imagem. 
        - name: Executando trivy
          uses: aquasecurity/trivy-action@0.23.0
          with:
            scan-type: 'image'
            image-ref: anderdomi/projetogithaction-pro:v${{ github.run_number }}
            format: sarif
            output: trivy-docker-result.sarif
            severity: '	UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL '

        - name: Upload do arquivo trivy para o GitHub
          uses: github/codeql-action/upload-sarif@v3
          with:
            category: docker-result
            sarif_file: trivy-docker-result.sarif

